apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.yt8492.grpcchat"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    dataBinding {
        enabled = true
    }
    sourceSets {
        main {
            proto {
                srcDir 'src/main/protobuf'
                srcDir 'src/main/protocolbuffers'
                include '**/*.protodevel'
            }
            java {
                srcDir 'src/main/protobuf'
                srcDir 'src/main/protocolbuffers'
                include '**/*.protodevel'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"

    implementation "androidx.appcompat:appcompat:$versions.appcompat"

    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"

    implementation "androidx.core:core-ktx:$versions.core"

    implementation "androidx.fragment:fragment-ktx:$versions.fragment"

    implementation "androidx.recyclerview:recyclerview:$versions.recycler"

    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

    implementation "com.google.dagger:dagger:$versions.dagger2"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger2"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger2"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger2"

    implementation "javax.annotation:javax.annotation-api:1.3.2"

    implementation "io.grpc:grpc-okhttp:${versions.grpc}"
    implementation "io.grpc:grpc-protobuf-lite:${versions.grpc}"
    implementation "io.grpc:grpc-stub:${versions.grpc}"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

protobuf {
    protoc {
        // You still need protoc like in the non-Android case
        artifact = 'com.google.protobuf:protoc:3.6.0'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${versions.grpc}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                javalite {}
                grpc {
                    option 'lite'
                }
            }
        }
    }
}
